/**
 * File: Statistics.java
 * type: interface
 * @author Data
 * -----------------
 * აქ იქნება სტატისტიკა. მას ექნება როგორც static მეთოდები (რომლებიც საერთო სტატისტიკურ მონაცემებს მოგვცემს.)
 * ასევე ჩვეულებრივი, ობიექტთან ასოცირებული მეთოდები. ამ კლასის ობიექტები უნდა გააჩნდეს Championship-კლასს.
 * ცხადია, რომ ეს ინტერფეისი, უფრო სწორად მისი იმპლემენტატორი კლასი არაფერს შეცვლის ბაზაში. უბრალოდ დაამუშავებს ინფორმაციას.
 */
package model.mainclasses;

import java.util.List;

public interface Statistics {

	/**
	 * აბრუნებს ჩემპიონატის ბომბარდირებს.
	 * @return Player ტიპის ობიექტების List, გოლების კლებადობითაა დალაგებული მოთამაშეები
	 */
	List<Player> getTopScorers();
	
	/**
	 * აბრუნებს ჩემპიონატის მონაწილეთა სიას, რომლებმაც ყველაზე მეტი საგოლე გადაცემა გააკეთეს
	 * @return Player ტიპის ობიექტების List, ასისტების კლებადობითაა დალაგებული მოთამაშეები
	 */
	List<Player> getAssists();
	
	/**
	 * აბრუნებს ჩემპიონატის განმავლობაში მოთამაშის მიერ გატანილ გოლებს, თანმიმდევრობით (თარიღების მიხედვით). არ ითვლება საკუთარ კარში გატანილი გოლები
	 * @param player ობიექტი რომელიც გადაეცემა არის Player ტიპის და ასახავს რომელ მოტამაშეზე გვინდა.
	 * @return Goal ტიპის ობიექტების List
	 */
	List<Goal> getGoalsForPlayer(Player player);
	
	/**
	 * აბრუნებს სიას სადაც წერია ვინ მიიღო ყვითელი ბარათები ჩემპიონატის განავლობაში
	 * @return Player ტიპის ობიექტები, რომლებიც დალაგებულია იმის კლებადობით თუ ვის რამდენი ყვითელი აქვს
	 */
	List<Player> getMostYellows();
	
	/**
	 * აბრუნებს სიას სადაც წერია ვინ მიიღო წითელი ბარათები ჩემპიონატის განავლობაში
	 * @return Player ტიპის ობიექტები, რომლებიც დალაგებულია იმის კლებადობით თუ ვის რამდენი წითელი აქვს
	 */
	List<Player> getMostReds();
	
}
